HTTP/1.1 304 Not Modified
X-Powered-By: Express
ETag: W/"750-VHvpfS7I125pWNS/ttqHH00w9xc"
Date: Tue, 25 May 2021 03:23:01 GMT
Connection: keep-alive
Keep-Alive: timeout=5

<!-- GET 요청하기 -->
<h1>GET 요청</h1>
<form action="/login" method="get">
    <input type="text" name="userid">
    <input type="password" name="userpw">
    <input type="submit" value="get">
</form>

<!-- POST 요청하기 -->
<h1>POST 요청</h1>
<form action="/login" method="post">
    <input type="text" name="userid">
    <input type="password" name="userpw">
    <input type="submit" value="post">
</form>

<!-- 비동기 활용하기 -->
<h1>비동기 활용하기 GET</h1>
<button id="btn">통신하기</button>
<div id="getroot"></div>
<script>
    const btn = document.querySelector('#btn');
    btn.addEventListener('click',btnFn);
    function btnFn(){
        console.log('req click');
        let options ={
            method:'GET'
        }
        fetch('http://localhost:3000/login?userid=abc&userpw=addd',options)
        .then(data =>{
            return data.text();
        })
        .then(text=>{
            const root = document.querySelector('#getroot');
            root.innerHTML += text+'<br />';
        })
    }
</script>

<h1>비동기 활용하기 POST</h1>
<button id="btn2">통신하기</button>
<div id="postroot"></div>
<script>
    const btn2 = document.querySelector('#btn2');
    btn2.addEventListener('click',btnFn2);
    function btnFn2(){
        console.log('req click');
        let options = {
            method:'POST',
            headers : {
                'content-type':'application/x-www-form-urlencoded',
            },
            body:'userid=abc&userpw=asd',
        }
        fetch('http://localhost:3000/login',options)
        .then(data=>{
            return data.text();
        })
        .then(text=>{
            const root = document.querySelector('#postroot');
            root.innerHTML += text+'<br />';
        })
    }
</script>


이렇게 문서가 오면
브라우저가 읽고 해석해서
이거를 화면을 만들어서 뿌려주는 것이다.


nunjcuks 는 그 값을 받아서 만들어서 보내주는 역할을 한다.
그래서 {{title}} 이렇게 해도 내가 보내준 값인 ingoo 가 나타나는것이다

render 가 하는 역할
render는 -nunjcuks를 사용하겠다는 것
html 파일을 읽어서 구문이 맞으면 nunjcuks 가 만들어서 보내주는것
만약 구문 오류가 있으면 html 자체를 못 만든것
그러면 보내줄 html이 없어서 오류가 나게 되는것


nunjcuks는
{ }
대괄호로 시작하는데

{{title}}   // 템플릿 오류 X
{%title%}   // 템플릿 오류 O

여기 안에 있는 내용이 오류가 있다는것
여기서 오류가 나면 아래 있는 코드들을 해석을 못함
html을 못만들고 오류가 뜨게된다.
