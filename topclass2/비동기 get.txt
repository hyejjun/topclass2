동기
요청 보내고 응답 올때까지 가만히 있는것

비동기
요청을 보내고 응답이 안와도 다른 요청을 보낼 수 있다.


한번의 요청에는 한번의 응답만 줄 수 있다는게 http 통신의 원칙이다.
동기는 응답이 올때까지 다음 요청을 할 수 없다.


동기 - ex)
인터넷 화면 로딩될 때까지 기다리기

웹툰을 보다가 이미지가 중간에 끊기게 되는 경우
기다리다 보면 전체 페이지가 딱 로딩된다.

비동기 - ex)
다시 스크롤해서 내리면 위에 있는건 바뀌지 않고 

페이스북 
스크롤 내리다가 어떤 카드 부분이 안나오는 경우
느리게 나타나게 된다 - 원하는 정보만 가져다 줌
-----------------------------------

***** 비동기 통신 get 요청
GET /login?userid=abc&userpw=addd HTTP/1.1
Host: localhost:3000
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:88.0) Gecko/20100101 Firefox/88.0
Accept: */*
Accept-Language: ko-KR,ko;q=0.8,en-US;q=0.5,en;q=0.3
Accept-Encoding: gzip, deflate
Referer: http://localhost:3000/
Connection: keep-alive
If-None-Match: W/"f-MDK1n1qzqnvFuuip9lTQRXK+SFo"


start line 이 중요


****** 비동기 get 응답

HTTP/1.1 304 Not Modified
X-Powered-By: Express
ETag: W/"f-MDK1n1qzqnvFuuip9lTQRXK+SFo"
Date: Tue, 25 May 2021 03:45:59 GMT
Connection: keep-alive
Keep-Alive: timeout=5

(응답 원시)
GET OK abc/addd



동기와 비동기 비교했을때 거의 차이가 없다.

근데 왜 통신하기 버튼 누를때마다 데이터를 가져올까??
fetch 로 요청을 보내면 페이지 로딩 없이
fetch -> 내가 현재 있는 곳에서 요청하고 싶을때
      -> 페이지 이동 없이 요청할때

동기든 비동기든 문서의 차이는 별로 없다

통신하기 클릭할때마다 요청-응답이 실행된다


app.get login 부분에
res.setTimeout(3000,()=>{
        res.send(`GET OK ${userid}/${userpw}`);
    })
를 줘서 시간차를 발생시켜본다

그러면 통신하기 버튼을 누르고 3초 후에 
GET OK abc/addd
가 나오게 된다

응답이 늦게 올수록 화면에 늦게 표출된다.

연속으로 3번 누르고 기다리면
천천히 세개가 생긴다
하나 생기고 3초 후 또 하나 생기는게 아니라
3개가 3초 뒤에 좌르륵 나온다.

응답을 받지 못했어도 요청을 또 할 수 있다는 것
